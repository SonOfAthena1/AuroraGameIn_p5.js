let xpos = 350
let ypos = 650
let dSize = 1

let speed = 6
let xaxis = 0
let xvelocity = 0;
let yaxis = 0
let yvelocity = 0
let lerpSpeed = 0.1
let enemyListShotxPos = 0
let enemyListShotyPos = 0
let lifeCount = 0
let shoot = false;
let launchShot = false;
let shotTime = 0
let shotList = [];
let shot_count = 0;

let backgroundList = []
let IceBlocks = 6
let enemyList = [];
let livesList = [];
let titleScreen = 0;
let starList = [];
let starSpeed = 0.2;
let win;
let x = 0;
let x2 = 0;
let wait = true
let latch3 = true
let d=1
let y=350


function setup() {
	createCanvas(700, 700);
	smooth();
  frameRate(60);
	rectMode(CENTER);
	
	
	Dog1 = new sledDog(4)
	Dog2 = new sledDog(3)
	Dog3 = new sledDog(2)
	Dog4 = new sledDog(1)
	Dog5 = new sledDog(0)
	
	
}


function draw() {
	
	if(latch3){
		if(starList.length<75){
			for(i=0;i<75;i++){
				starList.push(new star())
			}// STARS
		}

		if(backgroundList.length<IceBlocks){
			for(i=0;i<IceBlocks;i++){
				backgroundList.push(new iceBlock())
			} //ICEBLOCKS
		}	

		if(enemyList.length<10){
			for(i=0; i<10; i++){
				enemyList.push(new enemy())
			} //ENEMY
		}
		
		if(livesList.length<5){
			for(i=0; i<5; i++){
				livesList.push(new lives(45*i))
			} //LIVES
		}
		
		latch3=false
	}// END GAME RESETING LATCH
	
	timer = millis()/1000
	
	if(titleScreen===0){
		startScreen()
	}// START SCREEN
	
	
	if(titleScreen===1){
		howToPlay()
	}// HOW TO PLAY
	
	
	if(titleScreen===2){
	background(0);//colors background, in grayscale 0-255
	fill(250)
	stroke(150)
	rect(width/2,height/2,width,height) //BACKGROUND

	lifeCount = livesList.length
	
	if(keyIsDown(RIGHT_ARROW)&&xpos<width-20){
		xaxis = 1}
	else if(keyIsDown(LEFT_ARROW)&&xpos>20){
		xaxis = -1}
	else {xaxis = 0}
	
	xvelocity = lerp(xvelocity, xaxis, lerpSpeed);
	xpos += xvelocity * speed;
	
	if(xpos > width){
		xpos = 0
	}
	if(xpos < 0){
		xpos = width
	}
	
	if(keyIsDown(UP_ARROW)&&ypos>20){
		yaxis = -1}
	else if(keyIsDown(DOWN_ARROW)&&ypos<height-20){
		yaxis = 1}
	else {yaxis = 0}
	
	yvelocity = lerp(yvelocity, yaxis, lerpSpeed);
	ypos += yvelocity * speed;
	
	
	if(keyIsDown(32)&&shotTime < timer){
		shotList.push(new sledshot(xpos,ypos))
		shotTime = timer +0.25	
	}
	
	for(i=0;i<backgroundList.length;i++){
		backgroundList[i].render()
		if(backgroundList[i].y>750){
			backgroundList.splice(i,1)
		}
	}
	if(backgroundList.length<IceBlocks){
		backgroundList.push(new iceBlock())
	}

	for(i=0;i<enemyList.length;i++){  //RENDER ENEMY
		enemyList[i].render(0.33)
		if(timer>enemyList[i].shotTime){
			enemyList[i].enemyshot()
		}
		
		enemyListShotyPos = enemyList[i].shoty[enemyList[i].shoty.length-1]
		enemyListShotxPos = enemyList[i].shotx[enemyList[i].shotx.length-1]
		
		if((enemyListShotyPos)>ypos-100 && (enemyListShotyPos)<ypos+80 && (enemyListShotxPos)<xpos+40 && (enemyListShotxPos)>xpos-40){
			enemyList[i].shotFired = true
			livesList.splice(livesList.length-1,1)
		}//CHECK ENEMY SHOT HITS MAIN
		
	}//END DRAW ENEMIES AND ENEMY SHOTS
	
	for(i=0;i<shotList.length;i++){
		shotList[i].render(0.75)
		
		if(shotList[i].y<-10){
			shotList.splice(i,1)
		}
	}
	
	for(i=0;i<enemyList.length;i++){
		for(j=0;j<shotList.length;j++){
			if(i>-1){
				if (abs(shotList[j].x - enemyList[i].xx) < enemyList[i].radius && abs(shotList[j].y - enemyList[i].y) < enemyList[i].radius) {
					enemyList.splice(i,1)
					shotList.splice(j,1)
					j--
					i--
				}
			}
			else{i++}
		}
	}   //IF ENEMY IS SHOT
	
	
	Dog5.render(xpos-20*dSize,ypos-10*dSize,0.1*dSize)

	if(lifeCount>Dog4.healthID){
		Dog4.render(xpos+20*dSize,ypos-10*dSize,0.1*dSize)
	}
	if(lifeCount>Dog3.healthID){
		Dog3.render(xpos-20*dSize,ypos-45*dSize,0.1*dSize)
	}
	if(lifeCount>Dog2.healthID){
		Dog2.render(xpos+20*dSize,ypos-45*dSize,0.1*dSize)
	}
	if(lifeCount>Dog1.healthID){
		Dog1.render(xpos,ypos-70*dSize,0.1*dSize)
	}
	
	sled(dSize)
	
	for(i=0;i<livesList.length;i++){
		livesList[i].render(0.5)
	} //DRAW LIVES
	
		stroke(0)
		strokeWeight(0.5)
		textSize(15)
		text("Time:",25,25)
		text(floor(timer),60,25)
	}// GAME
	
	
	if(titleScreen===3){
		latch3 = true
		if(wait){
			waitTime = timer
			wait=false
		}
		
		textSize(40)
		text("YOU SAVED THE AURORA!",width/2,height/2)

		if(timer>=waitTime+4){
			Aurora()
		}
		
		if(timer>=waitTime+9){
			EXIT()
		}
	}// WIN SCREEN
	
	
	if(titleScreen===4){
		latch3 = true
		
		background(0);//colors background, in grayscale 0-255
		fill(250)
		stroke(150)
		rect(width/2,height/2,width,height) //BACKGROUND
		
		fill('red')
		stroke('red')
		textSize(30)
		textAlign(CENTER)
		text("YOU LOST!",width/2,height/2)
		
		EXIT()
	}// LOST SCREEN
	
	
	if(mouseIsPressed===true && titleScreen===0 && mouseX<500&&mouseX>200 && (mouseY<590&&mouseY>465)){
		titleScreen=2
	}
	
	else if(mouseIsPressed===true && titleScreen===0 && mouseX<500&&mouseX>200 && (mouseY<415&&mouseY>290)){
		titleScreen=1
	}
	
	if(enemyList.length===0){
		titleScreen=3
	}
	if(livesList.length===0){
		titleScreen=4
	}
	
	
	
}// END DRAW
